#!/bin/sh

LOG="logger -t acq400_streamd"

log_engine() {
	$LOG \
		"data_engine_0 $(get.sys /dev/acq400.0.knobs/data_engine_0)"

}
log_engine

training=0

wait_training_done() {
	site=$1
	let pollcat=0
	while [ ! -e /var/run/acq480.$site.train ]; do
		let pollcat=$pollcat+1
		let mod=$pollcat/10
		let mod="$mod*10"
		[ $mod -eq $pollcat ] || $LOG polling:$site
		if [ $pollcat -gt 20 ]; then
			$LOG timeout:$site
			exit 1
		fi
		usleep 100000
	done
	source /var/run/acq480.$site.train
	if [ "$A480_STATUS" != "OK" ]; then
		$LOG ERROR training fail:$site
		exit 1
	fi
}

read_fclk() {
	get.site 0 SIG:CLK_S1:FREQ | awk '{print $2}'
	#	get.site 0 SIG:CLK_MB:FREQ | awk '{print $2}'
}

ok_clk() {
	# 10M minimum. except the count tends to round down, so make it 9..
	echo $1 | awk '{ printf "%d\n", $1/9000000 }'
}

clk_MHz() {
	echo $1 | awk '{print $1/1000000}'
}

check_site_training() {
	site=$1
	$LOG check_site_training:$site
	
	retry=0
	while [ 1 ]; do
		FCLK=$(read_fclk)	
		OKCLK=$(ok_clk $FCLK)
		[ $OKCLK -ne 0 ] && break

		$LOG "$retry: WARNING CLK $FCLK TOO SLOW"
		if [ $retry -gt 5 ]; then
			  	$LOG "$retry: ERROR CLK $FCLK TOO SLOW"
			  	exit 1
		fi
		let retry=$retry+1
	done

	if [ ! -e /var/run/acq480.$site.train ]; then
		$LOG FIRST time training:$site
	else
		source /var/run/acq480.$site.train
		if [ "$A480_STATUS" != "OK" ] || [ "z$A480_CLK" = "z" ] ; then
			$LOG previous TRAIN bad:$site
		else	
			df=$(echo $FCLK $A480_FREQ | awk \
				'{ df=$2-$1; printf "%d\n", 1000*sqrt(df*df)/$1 }')
			if [ $df -gt 1 ]; then			
				$LOG CLK change $FCLK $A480_FREQ $df detected:$site
			else	
				file=/dev/shm/acq480.$site.retrain_requested
				if [ -e $file ]; then
					$LOG retrain_requested:$site
					rm $file
				else
					# all good no training required..
					return
				fi
			fi
		fi
	fi	
	rm -f /var/run/acq480.$site.train
	let training=$training+1

	if [ -e /dev/acq480/$site/JC ]; then
		$LOG acq480_jc_setfreq $(clk_MHz $FCLK)
		SITE=$site acq480_jc_setfreq $(clk_MHz $FCLK) | $LOG		
		let pollcat=1
		while [ "$(get.site $site JC_LOL)" != "0" ]; do
			$LOG "Waiting for JC_LOL"
			usleep 100000			
		done
		$LOG acq480_jc_setfreq done
	fi

	SITE=$site acq480_train | $LOG
	
	wait_training_done $site	
}

eval $(get.site 0 aggregator)

for site in $(echo $sites | tr , \  )
do
	if [ "x$site" = "xnone" ]; then
		$LOG ERROR NO SITES
		break
	else
		check_site_training $site
	fi
done

$LOG kickoff training count:$training
export ACQ400D_TRIG="soft_trigger"
