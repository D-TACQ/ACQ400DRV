#!/bin/sh

log_engine() {
	logger -t acq400_streamd \
		"data_engine_0 $(get.sys /dev/acq400.0.knobs/data_engine_0)"

}
log_engine


wait_training_done() {
	site=$1
	let pollcat=0
	while [ ! -e /var/run/acq480.$site.train ]; do
		let pollcat=$pollcat+1
		let mod=$pollcat/10
		let mod="$mod*10"
		[ $mod -eq $pollcat ] || logger -t acq400_streamd polling:$site
		if [ $pollcat -gt 20 ]; then
			logger -t acq400_streamd timeout:$site
			exit 1
		fi
		usleep 100000
	done
	source /var/run/acq480.$site.train
	if [ "$A480_STATUS" != "OK" ]; then
		logger -t acq400_streamd ERROR training fail:$site
		# file was sourced, so exit blows all the way back to command line.
		exit 1
	fi
}


check_site_training() {
	site=$1
	
	if [ ! -e /var/run/acq480.$site.train ]; then
		logger -t acq400_streamd FIRST time training:$site
	else
		source /var/run/acq480.$site.train		
		df=$(echo $(get.site 0  $A480_CLK) $A480_FREQ | awk '
			{ df=$2-$3; print sqrt(df*df) }')
		if [ $df -gt 10000 ]; then			
			logger -t acq400_streamd CLK change detected:$site
		else	
			file=/dev/shm/acq480.$site.retrain_requested
			if [ -e $file ]; then
				logger -t acq400_streamd retrain_requested:$site
				rm $file
			else
				# all good no training required..
				return
			fi
		fi
	fi	
	rm -f /var/run/acq480.$site.train
	SITE=$site acq480_train | logger -t acq400_streamd
	
	wait_training_done $site	
}

  
for file in /dev/sites/[1-6]
do
	if [ $file = '/dev/sites/[1-6]' ]; then
		logger -t acq400_streamd ERROR NO SITES
		break
	else
		check_site_training $(basename $file)
	fi
done

export ACQ400D_TRIG="soft_trigger"

