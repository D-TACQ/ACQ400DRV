#!/usr/local/bin/expect
# acq494_reg REG [MASK=ff] [VALUE]   query or set bitfield in reg, then init   



set VERBOSE 0
if { [info exists ::env(ACQ494_VERBOSE) ] } {
	set VERBOSE $::env(ACQ494_VERBOSE)
}

set SITE 1
if { [info exists ::env(SITE) ] } {
	set SITE $::env(SITE)
}



proc set_acq400_knob {site knob} {
	set filename "/dev/acq400.$site.knobs/$knob"
	set fileId [open $filename "w"]
	puts $fileId 1
	close $fileId
}
proc clr_acq400_knob {site knob} {
	set filename "/dev/acq400.$site.knobs/$knob"	
	set fileId [open $filename "w"]
	puts $fileId 0
	close $fileId
}

proc read_knob {knob} {
	global VERBOSE
	set kb [open $knob r]

	gets $kb value
	close $kb
	
	if { $VERBOSE } {
		puts "read_knob $knob = $value"
	}
	return $value
}
proc spi_reg_write {knob value} {
	global VERBOSE
	set kb [open $knob w]
	if { $VERBOSE } {
		puts "write_knob $value to $knob"
	}
	puts $kb $value
	close $kb
#	puts "write_knob 99"
}


set ROOT [format "/sys/bus/spi/devices/spi1.%d" [expr $SITE - 1] ]
# FOR TESTING  ACQ494_DUMMY_SPI=. :
if { [info exists ::env(ACQ494_DUMMY_SPI) ] } {
        set ROOT $::env(SITE)
}

proc spi_write_init {} {
	global ROOT
	set init [format "%s/tdc_gpx2_init" $ROOT]
	spi_reg_write $init 1
}
proc spi_reg_read {idev reg} {	
	global ROOT
	set knob [format "%s/tdc_gpx2_cfg%02d" $ROOT $reg]

	puts [read_knob $knob]
}


proc spi_reg_read_mask {knob mask} {
	set kv [expr 0x[read_knob $knob] ]
	set kv [expr $kv & $mask] 
	for {} { [expr $mask & 1] == 0 } { set mask [expr $mask >> 1] } {
		set kv [expr $kv >> 1]
	}
	return $kv
}

proc spi_reg_write_mask {knob mask value} {
	set rv [spi_reg_read_mask $knob 0xff]
	set rv [expr $rv & ~ $mask]
	for {} { [expr $mask & 1] == 0 } { set mask [expr $mask >> 1] } {
		set value [expr $value << 1]
	}	
	set rv [expr $rv | $value]
	spi_reg_write $knob $value
	spi_write_init
}


trace add execution source enterstep print

set REG 99
set MASK 0xff
set VALUE 88

set do_write 0

# REG is a string, MASK and VALUE are values .. to view in hex

if { $::argc == 0 } {
	puts "SITE=N acq494_reg REG \[M=mask\] \[value\]"
	exit
}

for {set ii 0} { $ii < $::argc } {incr ii} {
	puts "Hello $ii"
	if { $ii == 0 } {	
		set REG [lindex $::argv $ii]
	} elseif { $ii == 1 } {
		set pair [split [lindex $::argv $ii] =]
		if { [lindex $pair 0] == "M" } {
			set MASK [expr 0x[lindex $pair 1] ]
		} else {
			set VALUE  [expr 0x[lindex $pair 0] ]
			set do_write 1
			break
		}
	} else {
		set VALUE  [expr 0x[lindex $::argv $ii] ]
		set do_write 1
		break
	}
}

puts "DEBUG: do_write:$do_write SITE:$SITE root:$ROOT reg:$REG mask:$MASK value:$VALUE"

set knob [format "%s/tdc_gpx2_cfg%02d" $ROOT $REG]

if { $do_write } {
	spi_reg_write_mask $knob $MASK $VALUE
} else {
	puts [format %x [spi_reg_read_mask $knob $MASK]]
}



