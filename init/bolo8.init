#!/bin/sh
# quick hack for bolo8 in site1.

B8SITES=${1:-1}

/sbin/insmod  /usr/local/lib/modules/bolo8_drv.ko bolo8sites=$B8SITES

LNAMES="
ADC_1_A1
ADC_1_A0
ADC_2_A1
ADC_2_A0
ADC_3_A1
ADC_3_A0
ADC_4_A1
ADC_4_A0
ADC_5_A1
ADC_5_A0
ADC_6_A1
ADC_6_A0
ADC_7_A1
ADC_7_A0
ADC_8_A1
ADC_8_A0
DAC_REF_RANGE
DAC_RANGE
DAC_RESETn
OS_DAC_RESETn
CURR_ADC_RESET
Unused1
Unused2
Unused3
LED2
LED1
LED4
LED3
LED6
LED5
LED8
LED7"




init_one_b8() {
	site=$1
	pga=$2
	leds=$3
	
	echo init site:$site pga:$pga leds:$leds
	let pga2=$pga+23
	let leds2=$leds+7
	
	for gpio in $(seq $pga $pga2) $(seq $leds $leds2)
	do
		echo $gpio > export
		echo out > gpio$gpio/direction
	done
	
	let gpio=$pga
	
	for lname in $LNAMES
	do
		ln -s /sys/class/gpio/gpio$gpio/value /dev/bolo8/$site/$lname
		echo $lname | egrep -q n$\|LED
		if [ $? -eq 0 ]; then
			echo 1 > /sys/class/gpio/gpio$gpio/active_low
		fi
		echo 0 > /sys/class/gpio/gpio$gpio/value
		let gpio=$gpio+1
	done
	

}

get_gpiochip() {
	site=$1
	addr=$2
	let i2c_bus=$site+1
	
	for chip in /sys/bus/i2c/devices/${i2c_bus}-${addr}/gpio/gpio*
	do
		bchip=$(basename $chip)
		pin1=${bchip#gpiochip*}
		#echo $chip $(basename $chip) $pin1
		echo $pin1
	done	
}

REVBIAS=0xa000

init_b8_hardware() 
{
	site=$1
	echo init_b8_hardware ${site} reset all ADC and DAC
	set.sys  /dev/bolo8/${site}/CURR_ADC_RESET 1
	set.sys  /dev/bolo8/${site}/OS_DAC_RESETn 1
	set.sys  /dev/bolo8/${site}/DAC_RESETn 1
	sleep 0.1
	set.sys  /dev/bolo8/${site}/CURR_ADC_RESET 0
	set.sys  /dev/bolo8/${site}/OS_DAC_RESETn 0
	set.sys  /dev/bolo8/${site}/DAC_RESETn 0	
	
	set.sys /dev/acq400.${site}.knobs/current_adc_enable 1
	set.sys /dev/acq400.${site}.knobs/offset_dac_enable 1
	/usr/local/bin/ao420_init ${site}
	for ch in $(seq 8); do
		echo $REVBIAS > /dev/acq400.$site.knobs/offset_dac$ch
	done
}

cd /sys/class/gpio

for site in $(echo $B8SITES | tr , \  )
do
	#get_gpiochip $site 0020
	#get_gpiochip $site 0022
	#init_one_b8 $site 128 152
	mkdir -p /dev/bolo8/$site
	init_one_b8 $site $(get_gpiochip $site 0022) $(get_gpiochip $site 0020)
	init_b8_hardware $site
	ln -s /sys/kernel/debug/acq400/acq400.${site}/current/ /etc/acq400/${site}/current

	cat - >/etc/acq400/${site}/PULSE_OS_DAC_RESET <<EOF
#!/bin/sh
if [ -n "\$1" ]; then
	echo 1 > /dev/bolo8/${site}/OS_DAC_RESETn
	echo 0 > /dev/bolo8/${site}/OS_DAC_RESETn
else
	echo /dev/bolo8/${site}/OS_DAC_RESETn
fi
EOF
	chmod a+rx /etc/acq400/${site}/PULSE_OS_DAC_RESET
done




