#!/bin/sh

SITE=${SITE:-${1:-1}}
STF=/var/run/acq480.$SITE.train

train() {
source /dev/acq400.$SITE.knobs/train_states

echo BUSY TRAIN starts >$STF
set.site $SITE train=$ACQ480_RESET
set.site $SITE acq480_setPatDeskew=0
set.site $SITE acq480_setPatSync=0
set.site $SITE train=$ACQ480_START
set.site $SITE acq480_setPatDeskew=1
set.site $SITE train=$ACQ480_DESKEW
DESKEW_DONE=$(get.site $SITE train)
if [ $DESKEW_DONE -ne $ACQ480_DESKEW_DONE ];then
	echo DESKEW failed
	echo FAIL DESKEW failed iteration $1 >$STF
	exit 1
fi
set.site $SITE acq480_setPatSync=1
set.site $SITE train=$ACQ480_SYNC
SYNC_DONE=$(get.site $SITE train)
if [ $SYNC_DONE -ne $ACQ480_SYNC_DONE ]; then
	echo SYNC failed
	echo FAIL SYNC failed iteration $1 >$STF
	exit 1
fi
set.site $SITE acq480_setPatSync=0
set.site $SITE train=$ACQ480_ACTIVATE
echo LINK activated
(
echo A480_STATUS=OK
echo A480_INFO=\"GOOD LINK activated iteration $1\" 
sleep 10;
clk="$(get.site 0 SIG:CLK_S1:FREQ)"
echo A480_CLK=\"${clk% *}\"
echo A480_FREQ=${clk#* }
) >$STF &
exit 0
}

if [ "x$2" != "x" ]; then
	train $2
else
	down=1
	let count=0
	while [ $down -ne 0 ]; do
		let count=$count+1
		if [ $count -gt 10 ]; then
			( 
				echo A480_STATUS=FAIL
				echo A480_INFO=\"ERROR: failed to train in $count attempts\"
			) > $STF
			exit 1
		fi
		acq480_train $SITE $count
		down=$?
	done
	rm -f /dev/shm/acq480.$SITE.retrain_requested
	exit 0
fi
