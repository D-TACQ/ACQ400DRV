#!/bin/sh

CMD=${1:-status}
MGB1=${2:-0}
MGB2=${3:-0}

PIDF=/var/run/mgt_load.pid

is_running() {
	for pid in $(ps | awk '{ print $1 }')
	do
		if [ $pid = $1 ]; then
			echo 1; return
		fi
	done
	echo 0
}

load_is_running() {
	if [ -e $PIDF ] && [ $(is_running $(cat $PIDF)) ]; then
		echo 1
	else
		echo 0
	fi
}
load_block() {
	logger -t mgt_load load_block $MGB1 $MGB2
	mgtdram_descgen $MGB1 $MGB2 > /dev/mgt400.A.push_desc &
	echo $! > $PIDF
	wait
	logger -t mgt_load cleanup
	rm $PIDF
}
load() {
	if [ $(load_is_running) -eq 1 ]; then
		echo "ERROR: previous process still running, quitting"
	else
		set.mgt_direction_inbound 0
		load_block &
	fi		
}

query() {
	if [ $(load_is_running) -eq 1 ]; then
		echo "BUSY pid $(cat $PIDF)"
	else
		echo IDLE
	fi
}

abort() {
	if [ $(load_is_running) -eq 1 ]; then
		kill -9 $(cat $PIDF)
	fi
	sleep 1
	if [ $(load_is_running) -eq 1 ]; then
		echo ERROR: failed to abort
	else
		rm -f $PIDF
	fi
}

run() {
        if [ $(load_is_running) -eq 1 ]; then
                echo "ERROR: previous process still running, quitting"
        else
                set.mgt_direction_inbound 0
                load_block &
		sleep 1
		if [ $(load_is_running) -ne 1 ]; then
			echo "ERROR: failed to start"
		else
			(
			 logger -t mgt_load "run start"
			 streamtonowhered start
			 while [ $(load_is_running) -eq 1 ]; do
				sleep 1
			 done
			 streamtonowhered stop
			 logger -t mgt_load "run stop"
			) & 
			echo "CONTROLLER $! running"
		fi
        fi
}

case $CMD in
load)	load;;
abort)  abort;;
run)    run;;
*)	query;;
esac
