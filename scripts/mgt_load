#!/bin/sh

CMD=${1:-status}
MGB1=${2:-0}
MGB2=${3:-0}

PIDF=/var/run/mgt_load.pid

update_pid() {
	if [ -e $PIDF ]
	then pid=$(cat $PIDF)
	else unset pid
	fi
	export pid
}

is_running() {
	kill -0 $1 2>/dev/null
}

load_is_running() {
	test ! -z $pid && is_running $pid
}
load_block() {
	logger -t mgt_load load_block $MGB1 $MGB2
	mgtdram_descgen $MGB1 $MGB2 > /dev/mgt400.A.push_desc &
	echo $! > $PIDF
	trap "rm $PIDF" EXIT
        wait
	logger -t mgt_load cleanup
	rm $PIDF
}
load() {
	if load_is_running; then
		echo "ERROR: previous process still running, quitting"
	else
		set.mgt_direction_inbound 0
		load_block &
	fi
}

query() {
	if load_is_running; then
		echo "BUSY pid $pid"
	else
		echo IDLE
	fi
}

abort() {
	mgtdram_descgen 0 -1 > /dev/mgt400.A.push_desc
}

run() {
        if load_is_running; then
                echo "ERROR: previous process still running, quitting"
        else
                set.mgt_direction_inbound 0
                load_block &
		sleep 1
		update_pid
		if load_is_running; then
			(
			 logger -t mgt_load "run start"
			 streamtonowhered start
			 while load_is_running; do
				sleep 1
			 done
			 streamtonowhered stop
			 logger -t mgt_load "run stop"
			) &
			echo "CONTROLLER $! running"
		else
			echo "ERROR: failed to start"
		fi
        fi
}
update_pid
case $CMD in
load)	load;;
abort)  abort;;
run)    run;;
*)	query;;
esac
