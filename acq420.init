#!/bin/sh

echo acq420.init B1002



BLEN=1048576
NBUF=512

if [ -e /mnt/local/acq400_stream ]; then
	echo override from /mnt/local/acq400_stream
	cp /mnt/local/acq400_stream /usr/local/bin
fi
ln -s /sys/kernel/debug/dynamic_debug/control /dev/ddc

build_hb_node() {
	nn=$(printf "$3" $2)
	let minor="1000+$2"
	mknod $nn c $1 $minor			
}
build_hb() {
	MAJOR=$1
	NAME=$2

	HBDIR=/dev/${NAME}.hb
	NB=$(cat /dev/${NAME}.knobs/nbuffers)
	mkdir $HBDIR
	if [ $NB -gt 0 ]; then
		let NB0=$NB-1
		for hb in $(seq 0 $NB0)
		do
			if [ $hb -lt 10 ]; then
				build_hb_node $MAJOR $hb "$HBDIR/%02d"					
			fi
			NN=$(printf "$HBDIR/%03d" $hb)
			let minor="1000+$hb"
			mknod $NN c $MAJOR $minor		
		done
	fi
}
build_nodes() {
	finit=0
	while [ $finit -eq 0 ]; do
		read M_DEV
		if [ "$M_DEV" = "" ]; then
			finit=1;
		else
			MAJOR=${M_DEV% *}
			NAME=${M_DEV#* }		
			ID=${M_DEV#*.}

			echo +++ build nodes site $ID
			mknod /dev/ACQ420_FMC${ID}	c ${MAJOR} 0
			mknod /dev/${NAME} 			c ${MAJOR} 0
			mknod /dev/${NAME}.c 		c ${MAJOR} 1
			mknod /dev/${NAME}.histo 	c ${MAJOR} 2
			mknod /dev/${NAME}.hb0 		c ${MAJOR} 3
			mknod /dev/${NAME}.cs 		c ${MAJOR} 4
			[ $ID -eq 0 ] && mknod /dev/${NAME}.gpg	c ${MAJOR} 5
			[ $ID -eq 0 ] && mknod /dev/${NAME}.rsv c ${MAJOR} 11
			[ $ID -ne 0 ] && mknod /dev/${NAME}.ev  c ${MAJOR} 6
			
			build_hb ${MAJOR} ${NAME}
			
			case $(cat /dev/acq400.$ID.knobs/module_type) in
			40)			
				mknod /dev/${NAME}.dac c  ${MAJOR} 7
				mknod /dev/${NAME}.awg c  ${MAJOR} 9
				mknod /dev/${NAME}.awgc c ${MAJOR} 10;;
			60)
				mknod /dev/${NAME}.awg c ${MAJOR} 8;;	
			esac
		fi
	done
}
# daemon /usr/local/bin/add_webpage_site acq400.${site} ${site}

WEB_APPEND_JOB=/tmp/acq420-web-append.job

web_append()
{
	if [ ! -e $WEB_APPEND_JOB ]; then
		echo '#!/bin/sh' >$WEB_APPEND_JOB
		echo '# created by acq420.init' >> $WEB_APPEND_JOB
		chmod a+rx $WEB_APPEND_JOB
	fi
	echo "/usr/local/bin/add_webpage_site $1 $2" >> $WEB_APPEND_JOB
}


build_etc_site() {
	mkdir -p /etc/acq400/${site}
	for src in /dev/acq400.${site}.knobs/*
	do
		case $(basename $src) in
		driver|subsystem|power|uevent|dacspi|dacreset)
			;;
		*)
			ln -s ${src} /etc/acq400/${site};;
		esac
	done
}


customize_acq420()
{
	source 	/dev/sites/$1/details
	PN="${FRU_PART_NUM%% *}"
	old_ifs=$IFS; IFS="-"
	let ix=0
	for field in $PN
	do
		case $ix in
		0)			
			case $field in
			ACQ420FMC)	echo ACQ420FMC detected;;
			ACQ425ELF)	echo ACQ425ELF detected;;
			*)
				echo "ERROR: model $field not recognized";;
			esac;;
		1)
			echo NCHAN=$field;;				
		2)
			echo SPEED=$field			
			case $field in
			2000)
				CLKDIV=50
				ADC_CONV=26;;
			1000)
				CLKDIV=100
				ADC_CONV=54;;
			*)
				CLKDIV=200
				ADC_CONV=150;;
			esac
			echo "SPEED:$field set adc_conv_time:$ADC_CONV"
			set.sys /dev/acq400.$1.knobs/adc_conv_time $ADC_CONV;;
		3)
			echo BITS=$field
			case $BITS in
			18)
				set.sys /dev/acq400.$1.knobs/data32 1
				set.sys /dev/acq400.$1.knobs/adc_18b 1
				get.sys /dev/acq400.$1.knobs/data32
				get.sys /dev/acq400.$1.knobs/adc_18b
				;;
			*)
				set.sys /dev/acq400.$1.knobs/data32 0
				set.sys /dev/acq400.$1.knobs/adc_18b 0;;
			esac;;				
		esac
		let ix="$ix+1"
	done
	IFS=${old_ifs}
}

BOLO8_SITES=""
ACQ425_SITES=""


build_knobs_device() {
	dir=$1
	site=$(cat $dir/site)
	dk=/dev/acq400.${site}.knobs
	ln -s $dir/ ${dk}
	build_etc_site ${site}
	

	mtype=$(cat /$dir/module_type)
	
	echo build_knobs_device site:$site mtype:$mtype
	
	case $mtype in
	5|A5)
		if [ "x$ACQ425_SITES" != "x" ]; then
			ACQ425_SITES="${ACQ425_SITES} "
		fi		
		ACQ425_SITES="${ACQ425_SITES}$site"
		customize_acq420 $site;;
	1|A1)	
		customize_acq420 $site;;
	FF)    
		return;;
	2|3)
		echo 4 >/etc/acq400/${site}/SAMPLE_SIZE
		CLKDIV=8;;
	40)	
		ao420_init ${site}	
		CLKDIV=250;;
	60)
		if [ "x$BOLO8_SITES" != "x" ]; then
			BOLO8_SITES="${BOLO8_SITES},"
		fi		
		BOLO8_SITES="${BOLO8_SITES}$site"
		CLKDIV=100;; 
	*)
		CLKDIV=200;;
	esac		
	set.sys $dk/clkdiv $CLKDIV
	echo "set clkdiv $CLKDIV get.sys $dk/clkdiv $(get.sys $dk/clkdiv)"
	if [ -e $dk/gains ]; then
		set.sys ${dk}/gains 0000		
	fi
	touch /dev/shm/AI.${site}.wf.fin
	web_append acq400.${site} ${site}	
}

install_default_cal() {
	site=$1
	caldef=/dev/sites/${site}/caldef.xml
	if [ ! -e ${caldef} ]; then
		source 	/dev/sites/${site}/details
		PN="${FRU_PART_NUM%% *}"
		TYP="${PN%%-*}"
		if [ -e /usr/local/cal/${TYP}-defcal.xml ]; then
			cp /usr/local/cal/${TYP}-defcal.xml ${caldef}
		fi
	fi	
}
build_site0() {
	dk=/dev/acq400.0.knobs
	ek=/etc/acq400/0/
	ln -s $1 ${dk}
	web_append acq400.0 0
	ln -s ${dk}/aggregator ${ek}
	ln -s /usr/local/bin/run0 ${ek}
	ln -s /usr/local/bin/get.site /usr/local/bin/set.site ${ek}
	ln -s /usr/local/bin/transient ${ek}
	ln -s /proc/driver/acq400/0/Qstats ${ek}
	
	for k in ${dk}/data_engine_? ${dk}/gpg_* ${dk}/spad* \
		${dk}/di4_? ${dk}/do4_? ${dk}/data32 \
		${dk}/sync_* ${dk}/evt_* ${dk}/sig_src_route*
	do
		[ -e $k ] && ln -s $k /etc/acq400/0/
	done
	echo 0 > /etc/acq400/0/NCHAN
	echo 0 > /etc/acq400/0/data32
}

build_knobs() {
	dir=/sys/bus/platform/devices/40000000.acq2006sc
	if [ -e ${dir} ]; then
		build_site0 ${dir}
	fi
	for dir in /sys/bus/platform/devices/*acq4?0fmc
	do
		if [ -e ${dir}/site ]; then
			install_default_cal $(cat ${dir}/site)
			build_knobs_device ${dir}
		fi
	done
	
	if [ "x${BOLO8_SITES}" != "x" ]; then
		/usr/local/bin/bolo8.init ${BOLO8_SITES}
	fi
	if [ "x${ACQ425_SITES}" != "x" ]; then
		/usr/local/bin/acq425.init ${ACQ425_SITES}
		# use /mnt/local/acq420_custom
		#		BLEN=4194304
		#		NBUF=128
	fi
}

create_set_fanspeed() {
cat - >/usr/local/bin/set.fanspeed <<EOF
#!/bin/sh
# set fanspeed acq1001 style
FSPERCENT=\${1:-10}
set.sys /dev/acq400.0.knobs/fan_percent \$FSPERCENT
EOF
chmod a+rx /usr/local/bin/set.fanspeed
echo /usr/local/bin/set.fanspeed created
}


set_fans() {
	if [ ! -x /usr/local/bin/set.fanspeed ]; then
		if [ -e /dev/acq400.0.knobs/fan_percent ]; then
			create_set_fanspeed
		fi	
	fi
	[ -x /usr/local/bin/set.fanspeed ] && /usr/local/bin/set.fanspeed
}

spawn_knob_servers() {
	for dir in 	/etc/acq400/[0-9]
	do
		site=$(basename $dir)
		# sites at 4220 auto calc by acq400_knobs		
		let lport=4820+$site
		cmd="/usr/local/bin/procServ -p /var/run/knobs$site.pid --restrict -q $lport \
			/usr/local/bin/acq400_knobs -s $site"
		echo $cmd
		$cmd
	done			
}
######## Execution Starts Here 

if [ ! -e /etc/sites ]; then
	echo "ERROR FPGA not loaded exit now"
	exit 1	
fi

lsmod | grep -q acq4.0FMC
notloaded=$?

if [ $notloaded -eq 0 ]; then
	echo "module has been loaded already quitting.."	
	exit 1
fi


if [ -x /mnt/local/init.pl330.ko ]; then
	/mnt/local/init.pl330.ko
else
	if [ -f /mnt/local/pl330.ko ]; then
		MOD=/mnt/local/pl330.ko
	else
		MOD=/usr/local/lib/modules/pl330.ko
	fi
	/sbin/insmod $MOD
fi

if [ -f /mnt/local/acq420fmc.ko ]; then
	MOD=/mnt/local/acq420fmc.ko
	echo "WARNING using override driver $MOD"
else if [ -f /usr/local/lib/modules/acq420fmc.ko ]; then
	MOD=/usr/local/lib/modules/acq420fmc.ko
	else
		echo "ERROR, module acq420fmc.ko not found" 
			exit 1
		fi
	fi

#	mount -t debugfs none /sys/kernel/debug/
echo "for debug:"
echo "echo file acq400_drv.c +p" \> /sys/kernel/debug/dynamic_debug/control
echo "echo file acq400_sysfs.c +p" \> /sys/kernel/debug/dynamic_debug/control

source /etc/sites
if [ "x$good_sites" != "x" ]; then
	GS="good_sites=$good_sites"
fi
echo insmod $MOD bufferlen=$BLEN $GS
sleep 0.2

if [ -f /mnt/local/acq420_custom ]; then
	source /mnt/local/acq420_custom
else
	DRVR_CUSTOM=""
fi		
insmod $MOD bufferlen=$BLEN nbuffers=$NBUF $GS $DRVR_CUSTOM
build_knobs
set_fans
grep acq4.0 /proc/devices |  build_nodes	

spawn_knob_servers

nice daemon $WEB_APPEND_JOB

(grep -h numeric /usr/share/doc/acq*help* >/usr/share/doc/numerics)

killall -q inetd
cat /usr/local/init/inetd.conf >>/etc/inetd.conf
inetd /etc/inetd.conf


