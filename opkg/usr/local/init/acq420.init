#!/bin/sh

NSAM=4194304
#BLEN=262144
BLEN=524288

ln -s /sys/kernel/debug/dynamic_debug/control /dev/ddc

build_hb() {
	MAJOR=$1
	NAME=$2

	HBDIR=/dev/${NAME}.hb
	NB=$(cat /dev/${NAME}.knobs/nbuffers)
	mkdir $HBDIR
	let NB0=$NB-1
	for hb in $(seq 0 $NB0)
	do
		NN=$(printf "$HBDIR/%02d" $hb)
		let minor="100+$hb"
		mknod $NN c $MAJOR $minor		
	done
}
build_nodes() {
	finit=0
	while [ $finit -eq 0 ]; do
		read M_DEV
		if [ "$M_DEV" = "" ]; then
			finit=1;
		else
			MAJOR=${M_DEV% *}
			NAME=${M_DEV#* }		
			ID=${M_DEV#*.}

			mknod /dev/ACQ420_FMC${ID}	c ${MAJOR} 0
			mknod /dev/${NAME} 		c ${MAJOR} 0
			mknod /dev/${NAME}.c 		c ${MAJOR} 1
			mknod /dev/${NAME}.histo 	c ${MAJOR} 2
			mknod /dev/${NAME}.hb0 		c ${MAJOR} 3
			build_hb ${MAJOR} ${NAME}
		fi
	done
}
# daemon /usr/local/bin/add_webpage_site acq400.${site} ${site}

WEB_APPEND_JOB=/tmp/acq420-web-append.job

web_append()
{
	if [ ! -e $WEB_APPEND_JOB ]; then
		echo '#!/bin/sh' >$WEB_APPEND_JOB
		echo '# created by acq420.init' >> $WEB_APPEND_JOB
		chmod a+rx $WEB_APPEND_JOB
	fi
	echo "/usr/local/bin/add_webpage_site $1 $2" >> $WEB_APPEND_JOB
}

lsmod | grep -q acq4.0FMC
notloaded=$?

# cat /dev/sites/1/details
# FRU_PART_NUM="ACQ420FMC-4-1000-16"
# FRU_PART_NUM="ACQ435ELF-32FF"      no dash ..
set_nchan() {
	site=$1
	mtype=$2
	mkdir -p /etc/acq400/$site
	KDIR=/etc/acq400/$1
	source /dev/sites/$1/details
	_IFS=$IFS
	IFS='-'
	let ii=0

	# default: 4 channels

	echo decode_fru site:$site mtype:$mtype

	for field in $FRU_PART_NUM
	do
		case $ii in
		0) echo $field > $KDIR/MODEL;;
		1) echo $field | sed -e 's/[^0-9]//g' > $KDIR/NCHAN;;
		2) echo $field > $KDIR/MAXRATE;;
		3) echo $field > $KDIR/RESOLUTION;;
		esac
		let ii=$ii+1
		if [ $ii -eq 2 -a $mtype != 1 ]; then
			# next fields valid ACQ420 only
			break;
		fi
	done
# one day, all FRU will have NCHAN, MTYPE
	[ ! -z $FRU_NCHAN ] && echo $FRU_NCHAN > $KDIR/NCHAN
	[ ! -z $FRU_MTYPE ] && echo $FRU_MTYPE > $KDIR/MTYPE

# until then, we have to kludge
	if [ "$FRU_PART_NUM" = "ACQ435ELF-24FF-8TF" ]; then
		echo 32 > $KDIR/NCHAN
	fi
	if [ ! -e $KDIR/NCHAN ]; then
		case $mtype in
		2) nc=32;;
		3) nc=8;;
		*) nc=4;;
		esac
		echo $nc \> $KDIR/NCHAN
		echo $nc > $KDIR/NCHAN
	fi	
	case $mtype in
	2|3)
		echo 128 > $KDIR/MAXRATE
		echo 24 > $KDIR/RESOLUTION;;
	esac

	echo $FRU_SERIAL > $KDIR/SERIAL
	echo $FRU_MAN > $KDIR/MANUFACTURER
# intention: nchan is "number channels enabled"
	echo $KDIR/NCHAN $(cat $KDIR/NCHAN)
	cat $KDIR/NCHAN > $KDIR/nchan

	IFS=$_IFS
	return $ii
}

build_etc_site() {
	mkdir /etc/acq400/${site}
	for src in /dev/acq400.${site}.knobs/*
	do
		case $(basename $src) in
		driver|subsystem|power|uevent|dacspi|dacreset)
			;;
		*)
			ln -s ${src} /etc/acq400/${site};;
		esac
	done
}


build_knobs_device() {
	dir=$1
	site=$(cat $dir/site)
	ln -s $dir/ /dev/acq400.${site}.knobs
	build_etc_site ${site}
	

	mtype=$(cat /$dir/module_type)
	case $mtype in
	255)    
		return;;
	2|3)
		echo 4 >/etc/acq400/${site}/SAMPLE_SIZE
		CLKDIV=8;;
	64)	
		ao420_init ${site}
		CLKDIV=250;;
	*)
		CLKDIV=200;;
	esac
	echo $CLKDIV >/$dir/clkdiv

	if [ -e $dir/gains ]; then
		echo 0000 >/dev/acq400.${site}.knobs/gains
	fi
	touch /dev/shm/AI.${site}.wf.fin
	web_append acq400.${site} ${site}
	set_nchan ${site} ${mtype}
}

build_knobs() {
	if [ -e /sys/bus/platform/devices/40000000.acq2006sc ]; then
		ln -s /sys/bus/platform/devices/40000000.acq2006sc \
			/dev/acq400.0.knobs
		web_append acq400.0 0
	fi
	for dir in /sys/bus/platform/devices/*acq4?0fmc
	do
		if [ -e $dir/site ]; then
			build_knobs_device $dir
		fi
	done
}


if [ $notloaded -ne 0 ]; then
	if [ -f /mnt/pl330.ko ]; then
		MOD=/mnt/pl330.ko
	else
		MOD=/usr/local/lib/modules/pl330.ko
	fi
	/sbin/insmod $MOD
	
	if [ -f /mnt/acq420fmc.ko ]; then
		MOD=/mnt/acq420fmc.ko
		echo "WARNING using override driver $MOD"
	else if [ -f /usr/local/lib/modules/acq420fmc.ko ]; then
		MOD=/usr/local/lib/modules/acq420fmc.ko
		else
			echo "ERROR, module acq420fmc.ko not found" 
			exit 1
		fi
	fi

#	mount -t debugfs none /sys/kernel/debug/
	echo "for debug:"
	echo "echo file acq400_drv.c +p" \> /sys/kernel/debug/dynamic_debug/control
	echo "echo file acq400_sysfs.c +p" \> /sys/kernel/debug/dynamic_debug/control
	
	source /etc/sites
	if [ "x$good_sites" != "x" ]; then
		GS="good_sites=$good_sites"
	fi
	echo insmod $MOD bufferlen=$BLEN $GS
	sleep 0.2
	insmod $MOD bufferlen=$BLEN $GS
	build_knobs
	grep acq4.0 /proc/devices |  build_nodes	
fi


nice daemon $WEB_APPEND_JOB

killall -q inetd
cat /usr/local/init/inetd.conf >>/etc/inetd.conf
inetd /etc/inetd.conf


