#!/bin/sh

# Simple init for ao421. VALID for single SITE ONLY
# new from 20150520 : previously, we relied on a hacked device-tree to instantiate
# the i2c devices. Now we want to instantiate dynamically.
# acq425_drv.ko already does this - so we use acq425_drv.ko.
# NB: NOT COMPATIBLE with ACQ425!
# acq425_drv.ko will handle multiple AO421 if required, however this script would
# need to be generalized for that to happen.

# acq2006_001> cat /sys/class/gpio/gpiochip168/label 
# tca6424
# acq2006_001> cat /sys/class/gpio/gpiochip192/label 
# tca6424

SITE=${1:-5}
KDIR=/dev/acq400.${SITE}.knobs

PRSNT=$(cat /dev/gpio/fmc${SITE}_present)
if [ $PRSNT -ne 1 ]; then
	echo "+++ ERROR: ao421.init site ${SITE} empty"
	exit 1
fi

setO() {
	echo out >$1/direction
}
setAL() {
	echo 1 >$1/active_low
}
setOFF() {
	echo 0 >$1/value
}

mkln() {
	ln -s $PWD/$1/value /dev/gpio/$2
}

let bus=$SITE+1
CHIP1=$(basename $(echo /sys/bus/i2c/devices/$bus-0023/gpio/gpiochip*))
CHIP2=$(basename $(echo /sys/bus/i2c/devices/$bus-0022/gpio/gpiochip*))

if [ "$CHIP1" = "gpiochip*" -o "$CHIP2" = "gpiochip*" ] then
	echo did not locate gpiochip at $bus-0023 OR $bus-0022 attempt dynamic setting
	/sbin/insmod  /usr/local/lib/modules/acq425_drv.ko acq425_sites=$SITE	
	if [ $? -ne 0 ]; then
		echo "ERROR: /sbin/insmod  /usr/local/lib/modules/acq425_drv.ko acq425_sites=$SITE"
		exit 1
	fi
	CHIP1=$(basename $(echo /sys/bus/i2c/devices/$bus-0023/gpio/gpiochip*))
	CHIP2=$(basename $(echo /sys/bus/i2c/devices/$bus-0022/gpio/gpiochip*))	
	if [ "$CHIP1" = "gpiochip*" -o "$CHIP2" = "gpiochip*" ] then
		echo "ERROR: still no gpio chips, quitting"
		exit 1	
	fi
fi

let pin00=${CHIP1#gpiochip*}
let pin10=${CHIP2#gpiochip*}
let pin01=$pin00+23
let pin11=$pin10+23

echo "+++ ao421 SITE $SITE $bus-0022 $CHIP1 gpio $pin00 $pin01"
echo "+++ ao421 SITE $SITE $bus-0023 $CHIP2 gpio $pin10 $pin11"

cd /sys/class/gpio
for pin in $(seq $pin00 $pin01) $(seq $pin10 $pin11)
do
	echo $pin >export
	GPIO=gpio$pin
	setAL $GPIO
	setO $GPIO
	setOFF $GPIO
done


mkdir -p /dev/gpio/AO421/

echo +++ build knobs

let px=0

for pin in $(seq $pin00 $pin01) $(seq $pin10 $pin11)
do
	PX=$(printf "P%02d" $px)
#	echo mkln gpio$pin AO421/$PX
	mkln gpio$pin AO421/$PX
	let px=$px+1
done

if [ ! -d $KDIR ]; then
	echo ERROR: $KDIR does not exist
	/bin/sh
fi

BNKDIR=$(basename $KDIR)
mv $KDIR  /dev/.$BNKDIR
mkdir -p $KDIR
cd $KDIR

for kb in /dev/.$BNKDIR/*
do
	ln -s $kb
done

ln -s /dev/gpio/AO421/P43 CH01.01
ln -s /dev/gpio/AO421/P42 CH01.02
ln -s /dev/gpio/AO421/P41 CH01.03
ln -s /dev/gpio/AO421/P40 CH01.04
ln -s /dev/gpio/AO421/P39 CH01.05
ln -s /dev/gpio/AO421/P38 CH01.06
ln -s /dev/gpio/AO421/P37 CH01.07
ln -s /dev/gpio/AO421/P36 CH01.08
ln -s /dev/gpio/AO421/P24 CH01.09
ln -s /dev/gpio/AO421/P25 CH01.10
ln -s /dev/gpio/AO421/P26 CH01.11
ln -s /dev/gpio/AO421/P27 CH01.12
ln -s /dev/gpio/AO421/P31 CH01.13
ln -s /dev/gpio/AO421/P30 CH01.14
ln -s /dev/gpio/AO421/P29 CH01.15
ln -s /dev/gpio/AO421/P28 CH01.16
ln -s /dev/gpio/AO421/P35 CH01.17
ln -s /dev/gpio/AO421/P34 CH01.18
ln -s /dev/gpio/AO421/P33 CH01.19
ln -s /dev/gpio/AO421/P32 CH01.20

ln -s /dev/gpio/AO421/P07 CH02.01
ln -s /dev/gpio/AO421/P06 CH02.02
ln -s /dev/gpio/AO421/P05 CH02.03
ln -s /dev/gpio/AO421/P04 CH02.04
ln -s /dev/gpio/AO421/P11 CH02.05
ln -s /dev/gpio/AO421/P10 CH02.06
ln -s /dev/gpio/AO421/P09 CH02.07
ln -s /dev/gpio/AO421/P08 CH02.08
ln -s /dev/gpio/AO421/P03 CH02.09
ln -s /dev/gpio/AO421/P02 CH02.10
ln -s /dev/gpio/AO421/P01 CH02.11
ln -s /dev/gpio/AO421/P00 CH02.12
ln -s /dev/gpio/AO421/P15 CH02.13
ln -s /dev/gpio/AO421/P14 CH02.14
ln -s /dev/gpio/AO421/P13 CH02.15
ln -s /dev/gpio/AO421/P12 CH02.16
ln -s /dev/gpio/AO421/P16 CH02.17
ln -s /dev/gpio/AO421/P17 CH02.18
ln -s /dev/gpio/AO421/P18 CH02.19
ln -s /dev/gpio/AO421/P19 CH02.20


cd /etc/acq400/$SITE/
for file in $KDIR/CH0?.??
do
	ln -s /usr/local/bin/ao421_set $(basename $file)
done
ln -s /usr/local/bin/muxpattern


killall inetd
echo 4235 stream tcp nowait root dawgd dawgd ${SITE} >>/etc/inetd.conf
inetd /etc/inetd.conf


